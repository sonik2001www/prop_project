# Generated by Django 4.2.1 on 2023-05-25 13:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('developer_name', models.CharField(max_length=150)),
                ('project_count', models.IntegerField()),
                ('total_no_of_units', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('developer_units', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('resale_units', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('video', models.URLField(blank=True, null=True)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'Developer',
                'verbose_name_plural': 'Developers',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='photos/')),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_property_id', models.CharField(blank=True, max_length=30, null=True)),
                ('listing_type', models.CharField(choices=[('sell', 'Sell'), ('rent', 'Rent'), ('sell_rent', 'Sell&Rent')], max_length=30)),
                ('property_type', models.CharField(choices=[('house', 'House'), ('villa', 'Villa'), ('condo', 'Condo'), ('apartment', 'Apartment'), ('townhouse', 'Townhouse'), ('land', 'Land'), ('shophouse', 'Shophouse')], max_length=30)),
                ('project_name', models.CharField(max_length=150)),
                ('location', models.CharField(max_length=150)),
                ('bedrooms', models.CharField(choices=[('Studio', 'Studio'), ('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14')])),
                ('bathrooms', models.CharField(choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9')])),
                ('property_size', models.CharField(max_length=30)),
                ('outdoor_area_size', models.CharField(blank=True, max_length=30, null=True)),
                ('land_size', models.CharField(blank=True, max_length=30, null=True)),
                ('price_per_sqm', models.FloatField(blank=True, null=True)),
                ('unit_number', models.CharField(max_length=30)),
                ('floor_number', models.IntegerField(blank=True, null=True)),
                ('num_of_storeys', models.IntegerField(blank=True, null=True)),
                ('furnishing', models.CharField(choices=[('unfurnished', 'Unfurnished'), ('fully_furnished', 'Fully Furnished'), ('partly_furnished', 'Partly Furnished'), ('bare_shell', 'Bare Shell'), ('negotiable', 'Negotiable')], max_length=30)),
                ('num_of_parking_spaces', models.IntegerField()),
                ('monthly_maintenance_fee', models.IntegerField(blank=True, null=True)),
                ('ownership_type', models.CharField(choices=[('foreign_quota', 'Foreign Quota'), ('thai_quota', 'Thai Quota'), ('leasehold', 'Leasehold'), ('company', 'Company')], max_length=30)),
                ('land_ownership_type', models.CharField(blank=True, choices=[('thai_ownership', 'Thai Ownership'), ('company', 'Company'), ('leasehold', 'Leasehold')], max_length=30, null=True)),
                ('land_title_deed', models.CharField(blank=True, choices=[('chanote', 'Chanote'), ('sor_kor_1', 'Sor Kor 1'), ('nor_sor_2', 'Nor Sor 2'), ('nor_sor_3', 'Nor Sor 3'), ('nor_sor_3_gor', 'Nor Sor 3 Gor')], max_length=30, null=True)),
                ('purchase_year_month', models.DateField()),
                ('construction_completed', models.DateField(blank=True, null=True)),
                ('property_features', models.TextField(blank=True, null=True)),
                ('property_outdoor_features', models.TextField(blank=True, null=True)),
                ('unit_view', models.CharField(choices=[('blocked_view', 'Blocked View'), ('360_views', '360Â° Views'), ('city_view', 'City View'), ('pool_view', 'Pool View'), ('park_view', 'Park View'), ('golf_course_view', 'Golf Course View'), ('unblocked_open_view', 'Unblocked Open View'), ('skyline_view', 'Skyline View'), ('river_canal_view', 'River or Canal View'), ('garden_view', 'Garden View'), ('lake_view', 'Lake View')], max_length=30)),
                ('photo', models.CharField(blank=True, max_length=50, null=True)),
                ('video', models.URLField(blank=True, null=True)),
                ('virtual_tour', models.URLField(blank=True, null=True)),
                ('floor_plan', models.URLField(blank=True, null=True)),
                ('listing_title_for_sale', models.CharField(max_length=150)),
                ('listing_title_for_rent', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('for_sale_occupation_status', models.CharField(max_length=30)),
                ('for_sale_contract_expiry_date', models.DateField(blank=True, null=True)),
                ('for_rent_occupation_status', models.CharField(max_length=30)),
                ('for_rent_available_date', models.DateField(blank=True, null=True)),
                ('sales_price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('rental_price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('discounted_sales_price', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('discounted_rental_price', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('sold_price', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('sold_date', models.DateField(blank=True, null=True)),
                ('rent_price', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('rent_date', models.DateField(blank=True, null=True)),
                ('available_date', models.DateField(blank=True, null=True)),
                ('hidden_private_info_form', models.TextField()),
                ('owner_name', models.CharField(max_length=150)),
                ('owner_phone_number', models.CharField(max_length=20)),
                ('owner_email', models.EmailField(max_length=254)),
                ('owner_social_accounts', models.TextField()),
                ('owner_info_display', models.CharField(max_length=30)),
                ('featured_property', models.BooleanField(default=False)),
                ('bold_property', models.BooleanField(default=False)),
                ('photos', models.ManyToManyField(related_name='property_photos', to='property.photo')),
            ],
            options={
                'verbose_name': 'Property',
                'verbose_name_plural': 'Properties',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=150)),
                ('property_type', models.CharField(choices=[('house', 'House'), ('villa', 'Villa'), ('condo', 'Condo'), ('apartment', 'Apartment'), ('townhouse', 'Townhouse'), ('land', 'Land'), ('shophouse', 'Shophouse')], max_length=30)),
                ('area', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('project_size', models.FloatField(blank=True, null=True)),
                ('labd_size', models.FloatField(blank=True, null=True)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('towers_or_buildings_for_condos', models.CharField(blank=True, choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D'), ('e', 'E'), ('f', 'F'), ('g', 'G')], max_length=30, null=True)),
                ('several_phases_for_house', models.CharField(blank=True, choices=[('phase_1', 'Phase 1'), ('phase_2', 'Phase 2'), ('phase_3', 'Phase 3'), ('phase_4', 'Phase 4'), ('phase_5', 'Phase 5')], max_length=30, null=True)),
                ('total_units', models.IntegerField(blank=True, null=True)),
                ('pets_allowed', models.CharField(blank=True, choices=[('yes_all_kinds', 'Yes all kinds'), ('cats_and_dogs_small_sized', 'Cats and Dogs (small sized)'), ('cats_and_dogs_any_sized', 'Cats and dogs (any size)'), ('only_cats', 'Only cats'), ('only_dogs', 'Only dogs'), ('no', 'No')], max_length=30, null=True)),
                ('video', models.URLField(blank=True, null=True)),
                ('management_information_fees', models.TextField(blank=True, null=True)),
                ('map_latitude', models.CharField(blank=True, max_length=30, null=True)),
                ('map_longitude', models.CharField(blank=True, max_length=30, null=True)),
                ('average_price_for_sqm_in_building', models.FloatField(blank=True, null=True)),
                ('developer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='property.developer')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
            },
        ),
        migrations.AddField(
            model_name='photo',
            name='property',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_photos', to='property.property'),
        ),
    ]
